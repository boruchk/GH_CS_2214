ram[0] = 16'b0010000010000001;		// movi $1, 1
ram[1] = 16'b0010000100000010;		// movi $2, 2
ram[2] = 16'b0000010100110000;		// add $3,$1,$2
ram[3] = 16'b0010111000000001;		// addi $4,$3,1
ram[4] = 16'b0001000011010001;		// sub $5,$4,$1
ram[5] = 16'b1000010110010000;		// lw $3,beginning($1)
ram[6] = 16'b1000101000010000;		// lw $4,beginning($2)
ram[7] = 16'b1010011000010000;		// sw $4,beginning($1)
ram[8] = 16'b1010100110000000;		// sw $3,0($2)
ram[9] = 16'b0000101011100010;		// or $6,$2,$5
ram[10] = 16'b0000101011110011;		// and $7,$2,$5
ram[11] = 16'b0110000000001110;		// jal quadruple
ram[12] = 16'b1100101110001011;		// jeq $2,$7,end
ram[13] = 16'b0100000000011000;		// j end
ram[14] = 16'b0001110000001000;		// quadruple: jr $7
ram[15] = 16'b0000101111000100;		// slt $4,$2,$7
ram[16] = 16'b1110011010001010;		// beginning: slti $5,$1,10
ram[17] = 16'b0000000000000001;		// .fill 1
ram[18] = 16'b0000000000000000;		// .fill 9
ram[19] = 16'b0000000000000101;		// .fill 5
ram[20] = 16'b0000000000000101;		// .fill 6
ram[21] = 16'b0000000000000111;		// .fill 7
ram[22] = 16'b0000000000000001;		// .fill 1
ram[23] = 16'b0000000000000100;		// .fill 4
ram[24] = 16'b0100000000011000;		// end: halt
